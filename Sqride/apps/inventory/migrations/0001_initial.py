# Generated by Django 5.1.6 on 2025-03-29 07:24

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0002_branchowner_idx_branchowners_restaurant_id_and_more'),
        ('restaurants', '0002_restaurant_owner_restaurant_idx_restaurants_owner_id'),
    ]

    operations = [
        migrations.CreateModel(
            name='InventoryCategory',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('inventory_category_id', models.AutoField(primary_key=True, serialize=False)),
                ('category_name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'verbose_name': 'Inventory Category',
                'verbose_name_plural': 'Inventory Categories',
                'db_table': 'inventory_categories',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('supplier_id', models.AutoField(primary_key=True, serialize=False)),
                ('supplier_name', models.CharField(max_length=255, unique=True)),
                ('contact_details', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('address', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'suppliers',
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('inventory_id', models.AutoField(primary_key=True, serialize=False)),
                ('ingredient_name', models.CharField(max_length=255)),
                ('unit', models.CharField(choices=[('g', 'Grams'), ('kg', 'Kilograms'), ('ml', 'Milliliters'), ('l', 'Liters'), ('pcs', 'Pieces')], default='g', max_length=10)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('available_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('low_stock_alert', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('batch_number', models.CharField(blank=True, max_length=255, null=True)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('branch_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to='restaurants.branch')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to='inventory.inventorycategory')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to='inventory.supplier')),
            ],
            options={
                'verbose_name': 'Inventory Item',
                'verbose_name_plural': 'Inventory Items',
                'db_table': 'inventory',
            },
        ),
        migrations.CreateModel(
            name='InventoryTransaction',
            fields=[
                ('transaction_id', models.AutoField(primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('purchase', 'Purchase'), ('sale', 'Sale'), ('adjustment', 'Adjustment'), ('wastage', 'Wastage')], max_length=20)),
                ('quantity_change', models.DecimalField(decimal_places=2, max_digits=10)),
                ('transaction_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('reference_id', models.IntegerField(blank=True, null=True)),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='inventory.inventory')),
            ],
            options={
                'db_table': 'inventory_transactions',
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('purchase_order_id', models.AutoField(primary_key=True, serialize=False)),
                ('total_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('order_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('received_date', models.DateTimeField(blank=True, null=True)),
                ('branch_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_orders', to='restaurants.branch')),
                ('purchased_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.user')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_orders', to='inventory.supplier')),
            ],
            options={
                'db_table': 'purchase_orders',
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrderItem',
            fields=[
                ('purchase_order_item_id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, editable=False, max_digits=12)),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_items', to='inventory.inventory')),
                ('purchase_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.purchaseorder')),
            ],
            options={
                'db_table': 'purchase_order_items',
            },
        ),
        migrations.CreateModel(
            name='StockAdjustment',
            fields=[
                ('adjustment_id', models.AutoField(primary_key=True, serialize=False)),
                ('adjustment_type', models.CharField(choices=[('increase', 'Increase'), ('decrease', 'Decrease')], max_length=20)),
                ('quantity_adjusted', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reason', models.TextField(blank=True, null=True)),
                ('adjusted_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('adjusted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.user')),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adjustments', to='inventory.inventory')),
            ],
            options={
                'db_table': 'stock_adjustments',
            },
        ),
        migrations.AddIndex(
            model_name='inventory',
            index=models.Index(fields=['branch_id'], name='idx_inventory_branch_id'),
        ),
    ]
